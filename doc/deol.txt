*deol.txt*	Dark powered shell interface.

Version: 3.0
Author:  Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS                                                       *deol-contents*

Introduction		|deol-introduction|
Usage			|deol-usage|
Install			|deol-install|
Examples		|deol-examples|
Interface		|deol-interface|
  Functions		  |deol-functions|
  Options		  |deol-options|
  Key mappings		  |deol-key-mappings|
Ddu Sources		|deol-ddu-sources|
FAQ			|deol-faq|
Compatibility		|deol-compatibility|


==============================================================================
INTRODUCTION                                               *deol-introduction*

*deol* is a dark powered shell both for Neovim and Vim. It is based on
neovim or Vim terminal feature.


==============================================================================
USAGE                                                             *deol-usage*


==============================================================================
INSTALL                                                         *deol-install*

deol requires Neovim 0.8.0 or Vim 8.2.1978+.


==============================================================================
EXAMPLES                                                       *deol-examples*
>
	autocmd FileType deol call s:deol_settings()
	function! s:deol_settings()
	  nnoremap <buffer> <C-n>  <Plug>(deol_next_prompt)
	  nnoremap <buffer> <C-p>  <Plug>(deol_previous_prompt)
	  nnoremap <buffer> <CR>   <Plug>(deol_execute_line)
	  nnoremap <buffer> A      <Plug>(deol_start_append_last)
	  nnoremap <buffer> I      <Plug>(deol_start_insert_first)
	  nnoremap <buffer> a      <Plug>(deol_start_append)
	  nnoremap <buffer> e      <Plug>(deol_edit)
	  nnoremap <buffer> i      <Plug>(deol_start_insert)
	  nnoremap <buffer> q      <Plug>(deol_quit)
	endfunction
<

==============================================================================
INTERFACE                                                     *deol-interface*

------------------------------------------------------------------------------
FUNCTIONS                                                     *deol-functions*

                                                                   *deol#cd()*
deol#cd({directory})
		Change the deol buffer directory to {directory}.

                                                                 *deol#edit()*
deol#edit()
		Open a deol edit buffer.
		You can edit and execute the deol command line in the buffer.

		Special commands in edit buffer:

		":{command}"	Execute as Vim Ex-command
		"cd {path}"	|:lcd| to {path} if |deol-option-auto_cd| is
				enabled
		"vim {path}"	Quit deol buffer and |:edit| {path}

                                                     *deol#set_local_option()*
deol#set_local_option({name}, {option-name}, {value})
deol#set_local_option({name}, {dict})
		Set {option-name} option to {value} for {name}.
		If {dict} is available, the key is {option-name} and the value
		is {value}. See |deol-options| for available {option-name}.

                                                           *deol#set_option()*
deol#set_option({option-name}, {value})
deol#set_option({dict})
		Set {option-name} option to {value}.
		If {dict} is available, the key is {option-name} and the value
		is {value}. See |deol-options| for available {option-name}.

                                                                *deol#start()*
deol#start([{options}])
		Create a deol buffer.
		{options} is |deol-options| dictionary.
		If another deol buffer exists in the current tab, it will
		switch to the buffer.
		If |deol-option-command| is omit, 'shell' is used.

------------------------------------------------------------------------------
OPTIONS                                                         *deol-options*

                                                         *deol-option-auto_cd*
auto_cd
		Follow cd command in shell
		NOTE: It is only available for deol edit buffer.

		Default: v:true

                                                         *deol-option-command*
command
		Shell command line.

		Default: [&shell]

                                                             *deol-option-cwd*
cwd
		Current directory.

		Default: Use |getcwd()| value

                                                     *deol-option-dir_changed*
dir_changed
		Follow |DirChanged| event.

		Default: v:true

                                                            *deol-option-edit*
edit
		Open edit buffer in default.

		Default: v:false

                                                   *deol-option-edit_filetype*
edit_filetype
		Specify 'filetype' in edit buffer.

                                                  *deol-option-edit_winheight*
edit_winheight
		Set the height of the deol edit window.

		Default: 1

                                           *deol-option-external_history_path*
external_history_path
		The external shell history path. If it is set, the external
		histories are loaded in deol edit buffer.

		Default: ""

                                              *deol-option-extra_term_options*
extra_term_options
		Set the extra options for gvim terminal. See |term_start()|.
		`b:deol_extra_term_options` can override it in a buffer.
		NOTE: It is available in Vim only.
>
		call deol#set_option('extra_term_options', #{
		    \   term_finish: 'close',
		    \ })
<
		Default: #{
		\   curwin: v:true,
		\   term_kill: "kill",
		\   exit_cb: { job, status -> execute("unlet! t:deol") },
		\ }

                                                 *deol-option-floating_border*
floating_border
		The border if |deol-option-split| is "floating".
		Please see |nvim_open_win()| for available options.

		Default: "none"

                                           *deol-option-internal_history_path*
internal_history_path
		The internal shell history path. If it is set, the internal
		histories are saved.

		Default: ""

                                                            *deol-option-name*
name			(string)
		Specify the name.

		Default: ""

                                                     *deol-option-nvim_server*
nvim_server
		The path of neovim server.
		Please see |client-server|.
		NOTE: It is neovim only.

		Default: ""

                                                  *deol-option-prompt_pattern*
prompt_pattern
		Sets the pattern which matches the shell prompt.
		NOTE: The right prompt is not supported.

		Default: "" ('\f\+>' for Windows)

                                               *deol-option-shell_history_max*
shell_history_max
		The max history of external shell history.
		NOTE: It is only used when |deol-option-external_history_path|
		or |deol-option-internal_history_path| is set.

		Default: 500

                                                           *deol-option-split*
split
		Specify the split direction.

		"": No split
		"floating": Use neovim floating window feature
		"vertical": Split buffer vertically
		"farleft": Split buffer far left, like |CTRL-W_H|
		"farright": Split buffer far right, like |CTRL-W_L|
		otherwise: Split buffer horizontally

		Default: ""

                                                    *deol-option-start_insert*
start_insert
		Start the insert mode in deol buffer.
		NOTE: In Vim, the option is ignored if new terminal buffer is
		created.

		Default: v:true

                                                         *deol-option-toggle*
toggle
		Close deol buffer window if this deol window exists.

		Default: v:false

                                                       *deol-option-winheight*
winheight
		Set the height of the Deol window if |deol-option-split|
		is "horizontal".
		if |deol-option-split| is "floating", set the height of the
		floating window.

		Default: 15

                                                        *deol-option-winwidth*
winwidth
		Set the width of the Deol window if |deol-option-split|
		is "vertical".
		if |deol-option-split| is "floating", set the width of the
		floating window.

		Default: 80


------------------------------------------------------------------------------
KEY MAPPINGS                                               *deol-key-mappings*

                                                      *<Plug>(deol_backspace)*
<Plug>(deol_backspace)
		Send backspace key.
		NOTE: It is available in deol edit buffer.

                                                             *<Plug>(deol_bg)*
<Plug>(deol_bg)
		Create new deol buffer instead.
		NOTE: It is available in deol buffer.

                                                         *<Plug>(deol_ctrl_c)*
<Plug>(deol_ctrl_c)
		Same as shell's CTRL-c; send an INT signal
		NOTE: It is available in deol edit buffer.

                                                         *<Plug>(deol_ctrl_d)*
<Plug>(deol_ctrl_d)
		Same as shell's CTRL-d; send an EOF
		NOTE: It is available in deol edit buffer.

                                                           *<Plug>(deol_edit)*
<Plug>(deol_edit)
		Open the edit buffer.
		NOTE: |deol-option-prompt_pattern| must be set.
		NOTE: It is available in deol buffer.

                                                   *<Plug>(deol_execute_line)*
<Plug>(deol_execute_line)
		Execute the command line.
		NOTE: |deol-option-prompt_pattern| must be set.

                                                    *<Plug>(deol_next_prompt)*
<Plug>(deol_next_prompt)
		Move to next prompt from cursor.
		NOTE: |deol-option-prompt_pattern| must be set.
		NOTE: It is available in deol buffer.

                                                   *<Plug>(deol_paste_prompt)*
<Plug>(deol_paste_prompt)
		Paste the history to the command line.
		NOTE: |deol-option-prompt_pattern| must be set.
		NOTE: It is available in deol buffer.

                                                *<Plug>(deol_previous_prompt)*
<Plug>(deol_previous_prompt)
		Move to previous prompt from cursor.
		NOTE: |deol-option-prompt_pattern| must be set.
		NOTE: It is available in deol buffer.

                                                           *<Plug>(deol_quit)*
<Plug>(deol_quit)
		Quit the deol window.

                                                *<Plug>(deol_start_insert)*
<Plug>(deol_start_insert)
		Start insert mode.
		NOTE: It is available in deol buffer.

                                             *<Plug>(deol_start_insert_first)*
<Plug>(deol_start_insert_first)
		Start insert mode and move the cursor to the first column.
		NOTE: It is available in deol buffer.

                                                *<Plug>(deol_start_append)*
<Plug>(deol_start_append)
		Start insert mode and move the cursor to the next column.
		NOTE: It is available in deol buffer.

                                              *<Plug>(deol_start_append_last)*
<Plug>(deol_start_append_last)
		Start insert mode and move the cursor to the last column.
		NOTE: It is available in deol buffer.

==============================================================================
DDU SOURCES                                                 *deol-ddu-sources*

                                                            *deol-source-deol*
deol		Gather deol tabs.


==============================================================================
FAQ                                                                 *deol-faq*

FAQ 1:                                                            |deol-faq-1|
	How to donate money to you?

FAQ 2:                                                            |deol-faq-2|
	What is the difference neoterm and deol.nvim?

FAQ 3:                                                            |deol-faq-3|
	How to exit terminal mode in deol buffer?

FAQ 4:                                                            |deol-faq-4|
	I want to start Deol in the directory where the current buffer belongs
	to.

FAQ 5:                                                            |deol-faq-5|
	I want to use current vim when "git commit".

FAQ 6:                                                            |deol-faq-6|
	How to enable shell history completion in ddc.vim?

FAQ 7:                                                            |deol-faq-7|
	I want to cd automatically when Vim current directory is changed.


------------------------------------------------------------------------------
                                                                  *deol-faq-1*
Q: How to donate money to you?

A: I have started github sponsorship to spend more time for Vim/neovim
plugins.  You can donate money to help me!

https://github.com/sponsors/Shougo

                                                                  *deol-faq-2*
Q: What is the difference neoterm and deol.nvim?

A: neoterm is specialized for interpreter execution in the buffer.
deol.nvim is specialized for shell environment in each tab.

                                                                  *deol-faq-3*
Q: How to exit terminal mode in deol buffer?

A: Press |CTRL-\_CTRL-N| key, or use <ESC> key with the following key mapping.
>
	tnoremap <ESC>   <C-\><C-n>
<
                                                                  *deol-faq-4*
Q: I want to start Deol in the directory where the current buffer belongs to.

A: >
	call deol#start(#{ cwd: '%'->expand()->fnamemodify(':h') })
<
                                                                  *deol-faq-5*
Q: I want to use current vim when "git commit".

A: You should install "guise" plugin for it.

https://github.com/lambdalisue/guise.vim

                                                                  *deol-faq-6*
Q. How to enable shell history completion in ddc.vim?

A. >

	call ddc#custom#patch_filetype(['deol'], 'sources', ['shell-history'])
	call ddc#custom#patch_global('sourceOptions', #{
	    \   _: #{
	    \     matchers: ['matcher_head'],
	    \     sorters: ['sorter_rank']
	    \   },
	    \   shell-history: {'mark': 'shell'},
	    \ })
<

                                                                  *deol-faq-7*
Q. I want to cd automatically when Vim current directory is changed.

A. >
    autocmd DirChanged <buffer>
          \ call deol#cd(v:event->get('cwd', getcwd()))
<

==============================================================================
COMPATIBILITY                                             *deol-compatibility*

2023.06.14
* Remove custom_map option and default mappings.  You should set them
  manually.

2023.06.11
* Remove g:deol#enable_dir_changed.  Please use |DirChanged| autocmd instead.
* Remove all variables.  Please use |deol-options| instead.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
