*deol.txt*	Dark powered shell interface for NeoVim.

Version: 0.1
Author:  Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS						*deol-contents*

Introduction		|deol-introduction|
Usage			|deol-usage|
Install			|deol-install|
Examples		|deol-examples|
Interface		|deol-interface|
  Commands		  |deol-commands|
  Variables		  |deol-variables|
  Key mappings		  |deol-key-mappings|
FAQ			|deol-faq|

==============================================================================
INTRODUCTION						*deol-introduction*

==============================================================================
USAGE							*deol-usage*

==============================================================================
INSTALL							*deol-install*

==============================================================================
EXAMPLES						*deol-examples*

==============================================================================
INTERFACE						*deol-interface*

------------------------------------------------------------------------------
COMMANDS 						*deol-commands*

:Deol [{command}]					*:Deol*
	Create deol buffer using {command}.
	If deol buffer exists in the current tab, will switch to the buffer.

:DeolCd {directory}					*:DeolCd*
	Change deol buffer directory to {directory}.

:DeolEdit						*:DeolEdit*
	Open deol edit buffer.
	You can edit and execute the deol command line in the buffer.
	The buffer filetype is "zsh" and you can use Vim auto completion
	feature.
	Note: deoplete + deoplete-zsh is recommended.
	https://github.com/Shougo/deoplete.nvim
	https://github.com/zchee/deoplete-zsh

------------------------------------------------------------------------------
VARIABLES 						*deol-variables*

g:deol#prompt_pattern				*g:deol#prompt_pattern*

	Sets the pattern which matches the shell prompt.
	Note: The right prompt is not supported.
>
		let g:deol#prompt_pattern = '% \|%$'

g:deol#enable_dir_changed			*g:deol#enable_dir_changed*

	This variable controls to automatically follow DirChanged event.

	Default: 1

------------------------------------------------------------------------------
KEY MAPPINGS 						*deol-key-mappings*

						*<Plug>(deol_edit)*
<Plug>(deol_edit)
		Open the edit buffer.
		Note: |g:deol#prompt_pattern| must be set.

<Plug>(deol_execute_line)			*<Plug>(deol_execute_line)*
		Execute the command line.
		Note: |g:deol#prompt_pattern| must be set.

						*<Plug>(deol_previous_prompt)*
<Plug>(deol_previous_prompt)
		Move to previous prompt from cursor.
		Note: |g:deol#prompt_pattern| must be set.

<Plug>(deol_next_prompt)			*<Plug>(deol_next_prompt)*
		Move to next prompt from cursor.
		Note: |g:deol#prompt_pattern| must be set.

						*<Plug>(deol_paste_prompt)*
<Plug>(deol_paste_prompt)
		Paste the history to the command line.
		Note: |g:deol#prompt_pattern| must be set.

						*deol-default_key_mappings*
{lhs}			{rhs}
--------		-----------------------------
<CR>			<Plug>(deol_execute_line)
<C-p>			<Plug>(deol_previous_prompt)
<C-n>			<Plug>(deol_next_prompt)
<C-y>			<Plug>(deol_paste_prompt)
e			<Plug>(deol_edit)

==============================================================================
FAQ							*deol-faq*

Q: What is the difference neoterm and deol.nvim?

A: neoterm is specialized for interpreter execution in the buffer.
deol.nvim is specialized for shell environment in each tab.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
