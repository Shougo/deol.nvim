*deol.txt*	Dark powered shell interface.

Version: 1.0
Author:  Shougo <Shougo.Matsu at gmail.com>
License: MIT license

CONTENTS						*deol-contents*

Introduction		|deol-introduction|
Usage			|deol-usage|
Install			|deol-install|
Examples		|deol-examples|
Interface		|deol-interface|
  Commands		  |deol-commands|
  Options		  |deol-options|
  Variables		  |deol-variables|
  Key mappings		  |deol-key-mappings|
Denite Sources		|deol-denite-sources|
Ddu Sources		|deol-ddu-sources|
FAQ			|deol-faq|

==============================================================================
INTRODUCTION						*deol-introduction*

|Deol.nvim| is a dark powered shell for Neovim. It is based on neovim or Vim
terminal feature.

==============================================================================
USAGE							*deol-usage*

==============================================================================
INSTALL							*deol-install*

deol requires Neovim 0.8.0 or Vim 8.2.1978+.

==============================================================================
EXAMPLES						*deol-examples*

==============================================================================
INTERFACE						*deol-interface*

------------------------------------------------------------------------------
COMMANDS 						*deol-commands*

:Deol [{command}] [{options}]				*:Deol*
	Create a deol buffer using {command}.
	If another deol buffer exists in the current tab, it will switch to
	the buffer.
	If {command} is omit, 'shell' is used.

:DeolCd {directory}					*:DeolCd*
	Change the deol buffer directory to {directory}.

:DeolEdit						*:DeolEdit*
	Open a deol edit buffer.
	You can edit and execute the deol command line in the buffer.

	Special commands in edit buffer:

	":{command}"	Execute as Vim Ex-command
	"cd {path}"	|:lcd| to {path} if |deol-options-auto-cd| is enabled
	"vim {path}"	Quit deol buffer and |:edit| {path}

	Note: deoplete + deoplete-zsh is recommended for auto completion,
	if you use Deol with -command zsh or if you set 'shell' to zsh.
	https://github.com/Shougo/deoplete.nvim
	https://github.com/zchee/deoplete-zsh

------------------------------------------------------------------------------
OPTIONS							*deol-options*

-auto-cd						*deol-options-auto-cd*
		Follow cd command in shell
		Note: It is only available for deol edit buffer.

		Default: v:true

							*deol-options-cwd*
-cwd={directory}
		Current directory.

		Default: Use |getcwd()| value

						*deol-options-dir-changed*
-dir-changed
		Follow |DirChanged| event.

		Default: v:true

							*deol-options-edit*
-edit
 		Open edit buffer in default.

		Default: v:false

						*deol-options-edit-filetype*
-edit-filetype
 		Specify 'filetype' in edit buffer.

						*deol-option-edit-winheight*
-edit-winheight={window-height}
		Set the height of the deol edit window.

		Default: 1

							*deol-option-split*
-split={direction}
		Specify the split direction.

		"": No split
		"floating": Use neovim floating window feature
		"vertical": Split buffer vertically
		"farleft": Split buffer far left, like |CTRL-W_H|
		"farright": Split buffer far right, like |CTRL-W_H|
		otherwise: Split buffer horizontally

		Default: ""

						*deol-options-start-insert*
-start-insert
		Start the insert mode in deol buffer.

		Default: v:true

						*deol-options-toggle*
-toggle
		Close deol buffer window if this deol window exists.

		Default: v:false

						*deol-option-winheight*
-winheight={window-height}
		Set the height of the Deol window if |deol-option-split|
		is "horizontal".
		if |deol-option-split| is "floating", set the height of the
		floating window.

		Default: 15

						*deol-option-winwidth*
-winwidth={window-width}
		Set the width of the Deol window if |deol-option-split|
		is "vertical".
		if |deol-option-split| is "floating", set the width of the
		floating window.

		Default: 80


------------------------------------------------------------------------------
VARIABLES 						*deol-variables*

g:deol#custom_map					*g:deol#custom_map*
		Customize the mappings for deol.  See |deol-key-mappings| for
		default mappings.
>
		let g:deol#custom_map = #{
			\   edit: 'e',
			\   start_insert: 'i',
			\   start_insert_first: 'I',
			\   start_append: 'a',
			\   start_append_last: 'A',
			\   execute_line: '<CR>',
			\   previous_prompt: '<C-p>',
			\   next_prompt: '<C-n>',
			\   paste_prompt: '<C-y>',
			\   bg: '<C-z>',
			\   quit: 'q',
			\ }
<
					    	*g:deol#enable_dir_changed*
g:deol#enable_dir_changed
		Enable |DirChanged| autocmd detection.

		Default: v:true

g:deol#extra_options					*g:deol#extra_options*
		Set the extra options for gvim terminal. See |term_start()|.
		`b:deol_extra_options` can overide it in a buffer.
		Note: It is available in Vim8 only.
>
		let g:deol#extra_options = #{ term_finish: 'close' }
<
		Default: #{ curwin: v:true }

g:deol#floating_border				*g:deol#floating_border*
		The border if |deol-option-split| is "floating".
		Please see |nvim_open_win()| for available options.

		Default: "none"


g:deol#nvim_server					*g:deol#nvim_server*
		The path of neovim server.
		Please see |client-server|.
		Note: It is neovim only.

		Default: ""

g:deol#password_pattern				*g:deol#password_pattern*
		Sets the pattern which matches password input.

		Default pattern is complex.  Please see the source code.

g:deol#prompt_pattern				*g:deol#prompt_pattern*
		Sets the pattern which matches the shell prompt.
		Note: The right prompt is not supported.
>
		let g:deol#prompt_pattern = '% \|%$'
<
		Default: "" ('\f\+>' for Windows)

g:deol#shell_history_max			*g:deol#shell_history_max*
		The max history of external shell history.
		Note: It is only used when |g:deol#shell_history_path| is set.

		Default: 500

g:deol#shell_history_path			*g:deol#shell_history_path*
		The external shell history path. If it is set, the external
		histories are loaded in deol edit buffer.

		Default: ""

------------------------------------------------------------------------------
KEY MAPPINGS 						*deol-key-mappings*

						*<Plug>(deol_edit)*
<Plug>(deol_edit)
		Open the edit buffer.
		Note: |g:deol#prompt_pattern| must be set.

<Plug>(deol_execute_line)			*<Plug>(deol_execute_line)*
		Execute the command line.
		Note: |g:deol#prompt_pattern| must be set.

						*<Plug>(deol_previous_prompt)*
<Plug>(deol_previous_prompt)
		Move to previous prompt from cursor.
		Note: |g:deol#prompt_pattern| must be set.

<Plug>(deol_next_prompt)			*<Plug>(deol_next_prompt)*
		Move to next prompt from cursor.
		Note: |g:deol#prompt_pattern| must be set.

						*<Plug>(deol_paste_prompt)*
<Plug>(deol_paste_prompt)
		Paste the history to the command line.
		Note: |g:deol#prompt_pattern| must be set.

						*<Plug>(deol_bg)*
<Plug>(deol_bg)
		Create new deol buffer instead.

						*<Plug>(deol_ctrl_c)*
<Plug>(deol_ctrl_c)
		Same as shell's CTRL-c; send an INT signal
						*<Plug>(deol_ctrl_d)*
<Plug>(deol_ctrl_d)
		Same as shell's CTRL-d; send an EOF

						*deol-default_key_mappings*
{lhs}			{rhs}
--------		-----------------------------
<CR>			<Plug>(deol_execute_line)
<C-p>			<Plug>(deol_previous_prompt)
<C-n>			<Plug>(deol_next_prompt)
<C-y>			<Plug>(deol_paste_prompt)
<C-z>			<Plug>(deol_bg)
e			<Plug>(deol_edit)
<C-c>			<Plug>(deol_ctrl_c)
<C-d>			<Plug>(deol_ctrl_d)

==============================================================================
DENITE SOURCES						*deol-denite-sources*

						*deol-denite-source-deol*
deol		Gather deol tabs.

					*deol-denite-source-deol/history*
deol/history	Gather deol histories from |g:deol#shell_history_path|.

==============================================================================
DDU SOURCES						*deol-ddu-sources*

						*deol-source-deol*
deol		Gather deol tabs.

==============================================================================
FAQ							*deol-faq*

Q: How to donate money to you?

A: I have started github sponsorship to spend more time for Vim/neovim
plugins.  You can donate money to help me!

https://github.com/sponsors/Shougo

Q: What is the difference neoterm and deol.nvim?

A: neoterm is specialized for interpreter execution in the buffer.
deol.nvim is specialized for shell environment in each tab.

Q: How to exit terminal mode in deol buffer?

A: Press |CTRL-\_CTRL-N| key, or use <ESC> key with the following key mapping.
>
	tnoremap <ESC>   <C-\><C-n>
<
Q: I want to start Deol in the directory where the current buffer belongs to.

A: >
	execute 'Deol' '-cwd='.('%'->expand()->fnamemodify(':h'))

Q: I want to use current vim when "git commit".

A: You should install "guise" plugin for it.

https://github.com/lambdalisue/guise.vim

Q. How to enable shell history completion in ddc.vim?

A. >

	call ddc#custom#patch_filetype(['deol'], 'sources', ['shell-history'])
	call ddc#custom#patch_global('sourceOptions', #{
	    \   _: #{
	    \     matchers: ['matcher_head'],
	    \     sorters: ['sorter_rank']
	    \   },
	    \   shell-history: {'mark': 'shell'},
	    \ })
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
